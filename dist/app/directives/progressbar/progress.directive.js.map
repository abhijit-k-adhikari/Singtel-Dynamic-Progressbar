{"version":3,"sources":["app/directives/progressbar/progress.directive.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,qBAAoD,eAAe,CAAC,CAAA;AAGpE,IAAM,cAAc,GAAG;IACnB,OAAO,EAAE,IAAI;IACb,GAAG,EAAE,GAAG;CACX,CAAC;AAGF;IAqBI;QAb8B,aAAQ,GAAG,UAAU,CAAC;QAS7C,SAAI,GAAc,EAAE,CAAC;IAK5B,CAAC;IAlBQ,sBAAW,yBAAG;aAAd;YACL,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QACrB,CAAC;aAID,UAAe,CAAQ;YACnB,IAAI,CAAC,IAAI,GAAG,CAAC,CAAC;YACd,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,GAAO;gBACtB,GAAG,CAAC,qBAAqB,EAAE,CAAC;YAChC,CAAC,CAAC,CAAC;QACP,CAAC;;;OATA;IAkBD,2BAAQ,GAAR;QACI,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,KAAK,KAAK,CAAC;QACtC,IAAI,CAAC,GAAG,GAAG,OAAO,IAAI,CAAC,GAAG,KAAK,QAAQ,GAAG,IAAI,CAAC,GAAG,GAAG,cAAc,CAAC,GAAG,CAAC;IAC5E,CAAC;IAGM,yBAAM,GAAb,UAAc,GAAO;QACjB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;YAChB,GAAG,CAAC,UAAU,GAAG,MAAM,CAAC;QAC5B,CAAC;QACD,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACxB,CAAC;IAEM,4BAAS,GAAhB,UAAiB,GAAO;QACpB,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC;IAChD,CAAC;IAtCD;QAAC,YAAK,EAAE;;6CAAA;IAER;QAAC,kBAAW,CAAC,UAAU,CAAC;QACvB,YAAK,EAAE;;uCAAA;IAIR;QAAC,kBAAW,CAAC,OAAO,CAAC;;8CAAA;IATzB;QAAC,gBAAS,CAAC,EAAE,QAAQ,EAAE,yBAAyB,EAAE,CAAC;;gBAAA;IAyCnD,eAAC;AAAD,CAxCA,AAwCC,IAAA;AAxCY,gBAAQ,WAwCpB,CAAA","file":"progress.directive.js","sourcesContent":["import {Directive, OnInit, Input, HostBinding} from '@angular/core';\r\nimport {Bar} from 'app/directives/progressbar/bar.component';\r\n\r\nconst progressConfig = {\r\n    animate: true,\r\n    max: 100\r\n};\r\n\r\n@Directive({ selector: 'bs-progress, [progress]' })\r\nexport class Progress implements OnInit {\r\n    @Input() public animate:boolean;\r\n\r\n    @HostBinding('attr.max')\r\n    @Input() public get max():number {\r\n        return this._max;\r\n    }\r\n\r\n    @HostBinding('class') private addClass = 'progress';\r\n\r\n    public set max(v:number) {\r\n        this._max = v;\r\n        this.bars.forEach((bar:Bar) => {\r\n            bar.recalculatePercentage();\r\n        });\r\n    }\r\n\r\n    public bars:Array<any> = [];\r\n\r\n    private _max:number;\r\n\r\n    constructor() {\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.animate = this.animate !== false;\r\n        this.max = typeof this.max === 'number' ? this.max : progressConfig.max;\r\n    }\r\n\r\n\r\n    public addBar(bar:Bar) {\r\n        if (!this.animate) {\r\n            bar.transition = 'none';\r\n        }\r\n        this.bars.push(bar);\r\n    }\r\n\r\n    public removeBar(bar:Bar) {\r\n        this.bars.splice(this.bars.indexOf(bar), 1);\r\n    }\r\n}\r\n"]}